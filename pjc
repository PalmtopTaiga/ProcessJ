#!/bin/bash

INSTALL_DIR="./"

homedir=~
eval homedir=$homedir

CONFIG_FILE=".pjconfig"
if ! [ -e "$homedir/$CONFIG_FILE" ] ; then
  echo "No ProcessJ configuration file found. Should be in '$homedir/$CONFIG_FILE'"
  exit
fi
CONFIG_FILE="$homedir/$CONFIG_FILE"

if ! grep "workingdir" "$CONFIG_FILE" > /dev/null ; then
  echo "No working directory specified in '$CONFIG_FILE'."
  echo "File must contain a line of the form 'workingdir=...'"
  exit
fi

workingdir="$homedir/`grep workingdir $CONFIG_FILE | cut -d '=' -f 2 | sed 's/ //g'`"
#echo "the working directory is $workingdir"

if ! [ -d "$workingdir" ] ; then
  echo "Working directory '$workingdir' missing. "
  read -r -p "Make '$workingdir'? [y/n] " response
  case $response in
  [yY])
    mkdir $workingdir
    chmod 755 $workingdir
    ;;
  *)
    echo "Working directory not created"
    exit
    ;;
  esac
fi

## clean the working directory
rm -i -rf $workingdir/* > /dev/null

## compile .pj code using ProcessJ compiler and generate the .java file in the working directory.
O=`java -cp $INSTALL_DIR/bin:$INSTALL_DIR/src/Utilities/java_cup_runtime.jar:$INSTALL_DIR/src/Utilities/ST-4.0.7.jar:$INSTALL_DIR/src/Utilities/asm-all-3.3.1.jar:$INSTALL_DIR:$INSTALL_DIR/src:. ProcessJc -t JVM -I /opt/ProcessJ/include $@`
ERRORS=`echo "${O}" | awk -v n=1 '{if(NR>n) print a[NR%n]; a[NR%n]=$0}'`
echo "${O}"
STATUS=`echo "${O}" | awk '/./{line=$0} END{print line}'`
#echo "Status ${STATUS}"

if [ "${STATUS}" = "** COMPILATION SUCCEEDED **" ] ; then
  echo "Compilation successful"
else
  echo "${ERRORS}"
  exit 1
fi

## compile the .java file using Java compiler
O=`javac -classpath $INSTALL_DIR/bin/:$INSTALL_DIR/lib/JVM:. $workingdir/*.java`
if [ "${O}" != "" ] ; then
  #in the unlikely event of a Java issue
  echo "An error has ocurred. Please send the .pj file and this output"
  echo "to matt.pedersen@unlv.edu"
  echo "${O}"
  exit 1
else
  echo "Java compilation successful"
fi

#pwd

## instrument the Java classes for resumption
pushd $workingdir >/dev/null
O=`java -classpath $INSTALL_DIR/bin/:$INSTALL_DIR/src/Utilities/asm-all-3.3.1.jar/:. Instrument/Instrumenter .`
popd > /dev/null
ERRORS=`echo "${O}" | awk -v n=1 '{if(NR>n) print a[NR%n]; a[NR%n]=$0}'`
STATUS=`echo "${O}" | awk '/./{line=$0} END{print line}'`
if [ "${STATUS}" = "** INSTRUMENTATION SUCCEEDED **" ] ; then
  echo "Instrumentation successful"
else
  echo "${ERRORS}"
  exit 1
fi

## let's create an executable jar file now.
pushd $workingdir > /dev/null
rm -rf META-INF
mkdir META-INF ## create dir for manifest file
filename="${@##*/}" ## $@ is the full path'ed filename of .pj file. we extract just the file name x.pj
just_filename="${filename%.*}" ## now extract just the name of the file
echo "Main-Class: "$just_filename > META-INF/MANIFEST.MF ## write the manifest file

O=`jar cmvf META-INF/MANIFEST.MF $just_filename.jar *.class > /dev/null`
if [ "${O}" != "" ] ; then
  #in the unlikely event of a Java issue
  echo "An error has ocurred. Please send the .pj file and this output"
  echo "to matt.pedersen@unlv.edu"
  echo "${O}"
  exit 1
else
  echo "JAR file creation succesfull"
fi

printf "\nOutput written to ${just_filename}.jar\n"

popd > /dev/null
mv $workingdir/$just_filename.jar .
